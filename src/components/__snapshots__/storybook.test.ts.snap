// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Common Components/Box Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="css-0"
  >
    Hello World!
  </div>,
  <span />,
]
`;

exports[`Storyshots Common Components/CoverImage Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="css-79elbk"
  >
    <img
      alt="thumbnail"
      className="chakra-image css-17crems"
      height={200}
      loading="lazy"
      src="https://placehold.jp/150x150.png"
    />
    <div
      className="css-x2qbky"
    >
      Hello World!
    </div>
  </div>,
  <span />,
]
`;

exports[`Storyshots Common Components/CoverImage Long Text 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="css-79elbk"
  >
    <img
      alt="thumbnail"
      className="chakra-image css-17crems"
      height={200}
      loading="lazy"
      src="https://placehold.jp/150x150.png"
    />
    <div
      className="css-x2qbky"
    >
      吾輩は猫である。名前はまだ無い。どこで生れたかとんと見当がつかぬ
    </div>
  </div>,
  <span />,
]
`;

exports[`Storyshots Common Components/CoverImage No Src 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="css-79elbk"
  >
    <div
      className="css-g63t4c"
    />
    <div
      className="css-x2qbky"
    >
      Hello World!
    </div>
  </div>,
  <span />,
]
`;

exports[`Storyshots Common Components/CoverImage Set Size 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="css-79elbk"
  >
    <img
      alt="thumbnail"
      className="chakra-image css-1awnk4n"
      height={180}
      loading="lazy"
      src="https://placehold.jp/150x150.png"
    />
    <div
      className="css-x2qbky"
    >
      Hello World!
    </div>
  </div>,
  <span />,
]
`;

exports[`Storyshots Common Components/Date Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <time
    className="css-15hwmdh"
    dateTime="2000-11-22T00:00:00.000Z"
  >
    2000/11/22
  </time>,
  <span />,
]
`;

exports[`Storyshots Common Components/Date Format 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <time
    className="css-15hwmdh"
    dateTime="2000-11-22T00:00:00.000Z"
  >
    2000年11月22日
  </time>,
  <span />,
]
`;

exports[`Storyshots Common Components/Flex Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="css-k008qs"
  >
    Hello World!
  </div>,
  <span />,
]
`;

exports[`Storyshots Common Components/IconButton Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <button
    aria-label="アイコンボタン"
    className="chakra-button css-dn5esd"
    type="button"
  >
    <svg
      aria-hidden={true}
      fill="currentColor"
      focusable={false}
      height="1em"
      stroke="currentColor"
      strokeWidth="0"
      style={
        Object {
          "color": undefined,
        }
      }
      viewBox="0 0 512 512"
      width="1em"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z"
      />
    </svg>
  </button>,
  <span />,
]
`;

exports[`Storyshots Common Components/List Empty 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <ul
    className="css-155za0w"
    role="list"
  />,
  <span />,
]
`;

exports[`Storyshots Common Components/List Multiple Items 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <ul
    className="css-155za0w"
    role="list"
  >
    <li
      className="css-0"
    >
      吾輩は猫である。名前はまだ無い。どこで生れたかとんと見当がつかぬ。何でも薄暗いじめじめした所でニャーニャー泣いていた事だけは記憶している。吾輩はここで始めて人間というものを見た。しかもあとで聞くとそれ...
    </li>
    <li
      className="css-0"
    >
      吾輩は猫である。名前はまだ無い。どこで生れたかとんと見当がつかぬ。何でも薄暗いじめじめした所でニャーニャー泣いていた事だけは記憶している。吾輩はここで始めて人間というものを見た。しかもあとで聞くとそれ...
    </li>
    <li
      className="css-0"
    >
      吾輩は猫である。名前はまだ無い。どこで生れたかとんと見当がつかぬ。何でも薄暗いじめじめした所でニャーニャー泣いていた事だけは記憶している。吾輩はここで始めて人間というものを見た。しかもあとで聞くとそれ...
    </li>
  </ul>,
  <span />,
]
`;

exports[`Storyshots Common Components/List One Item 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <ul
    className="css-155za0w"
    role="list"
  >
    <li
      className="css-0"
    >
      吾輩は猫である。名前はまだ無い。どこで生れたかとんと見当がつかぬ。何でも薄暗いじめじめした所でニャーニャー泣いていた事だけは記憶している。吾輩はここで始めて人間というものを見た。しかもあとで聞くとそれ...
    </li>
  </ul>,
  <span />,
]
`;

exports[`Storyshots Common Components/MainHeading Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <h2
    className="css-ratmk4"
  >
    Hello World!
  </h2>,
  <span />,
]
`;

exports[`Storyshots Common Components/SubHeading Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <h3
    className="css-15qp5m4"
  >
    Hello World!
  </h3>,
  <span />,
]
`;

exports[`Storyshots Common Components/Tag Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <a
    href="/tags/hello-world"
    onClick={[Function]}
    onMouseEnter={[Function]}
  >
    <li
      className="chakra-wrap__listitem css-6m5bbl"
    >
      <div
        className="chakra-stack css-84zodg"
      >
        <svg
          className="chakra-icon css-13otjrl"
          fill="currentColor"
          focusable={false}
          height="1em"
          stroke="currentColor"
          strokeWidth="0"
          style={
            Object {
              "color": undefined,
            }
          }
          viewBox="0 0 512 512"
          width="1em"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M0 252.118V48C0 21.49 21.49 0 48 0h204.118a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882L293.823 497.941c-18.745 18.745-49.137 18.745-67.882 0L14.059 286.059A48 48 0 0 1 0 252.118zM112 64c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z"
          />
        </svg>
        <p
          className="chakra-text css-0"
        >
          Hello World!
        </p>
      </div>
    </li>
  </a>,
  <span />,
]
`;

exports[`Storyshots Common Components/Tag Without Slug 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <li
    className="chakra-wrap__listitem css-mrcvwr"
  >
    <div
      className="chakra-stack css-84zodg"
    >
      <svg
        className="chakra-icon css-13otjrl"
        fill="currentColor"
        focusable={false}
        height="1em"
        stroke="currentColor"
        strokeWidth="0"
        style={
          Object {
            "color": undefined,
          }
        }
        viewBox="0 0 512 512"
        width="1em"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M0 252.118V48C0 21.49 21.49 0 48 0h204.118a48 48 0 0 1 33.941 14.059l211.882 211.882c18.745 18.745 18.745 49.137 0 67.882L293.823 497.941c-18.745 18.745-49.137 18.745-67.882 0L14.059 286.059A48 48 0 0 1 0 252.118zM112 64c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48z"
        />
      </svg>
      <p
        className="chakra-text css-0"
      >
        Hello World!
      </p>
    </div>
  </li>,
  <span />,
]
`;

exports[`Storyshots Common Components/Thumbnail Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <img
    alt="thumbnail"
    className="chakra-image css-1sv9k7u"
    height={150}
    loading="lazy"
    src="https://placehold.jp/150x150.png"
    width={150}
  />,
  <span />,
]
`;

exports[`Storyshots Common Components/Thumbnail No Src 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <span />,
]
`;

exports[`Storyshots Common Components/Thumbnail Set Size 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <img
    alt="thumbnail"
    className="chakra-image css-9yxp9o"
    height={180}
    loading="lazy"
    src="https://placehold.jp/150x150.png"
    width={300}
  />,
  <span />,
]
`;

exports[`Storyshots Domain Components/Card Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="article-card css-1y9794"
  >
    <div
      className="css-ojlcd6"
    >
      <img
        alt="thumbnail"
        className="chakra-image css-3j5kgf"
        height={70}
        loading="lazy"
        src="https://placehold.jp/150x150.png"
        width={120}
      />
      <div
        className="css-xg5s6b"
      >
        <h2
          className="css-1i8ukke"
        >
          吾輩は猫である
        </h2>
        <h3
          className="css-15qp5m4"
        >
          吾輩は猫である。名前はまだ無い。どこで生れたかとんと見当がつかぬ。何でも薄暗いじめじめした所でニャーニャー泣いていた事だけは記憶している。吾輩はここで始めて人間というものを見た。しかもあとで聞くとそれ...
        </h3>
        <time
          className="css-o30iye"
          dateTime="2000-11-22T00:00:00.000Z"
        >
          2000.11.22
        </time>
      </div>
    </div>
    <div
      className="css-fozpxd"
    >
      <div
        className="css-1eskh14"
      >
        <img
          alt="thumbnail"
          className="chakra-image css-i96gla"
          height={70}
          loading="lazy"
          src="https://placehold.jp/150x150.png"
          width={120}
        />
        <h2
          className="css-j0vfib"
        >
          吾輩は猫である
        </h2>
      </div>
      <h3
        className="css-xf98z4"
      >
        吾輩は猫である。名前はまだ無い。どこで生れたかとんと見当がつかぬ。何でも薄暗いじめじめした所でニャーニャー泣いていた事だけは記憶している。吾輩はここで始めて人間というものを見た。しかもあとで聞くとそれ...
      </h3>
      <time
        className="css-o30iye"
        dateTime="2000-11-22T00:00:00.000Z"
      >
        2000.11.22
      </time>
    </div>
  </div>,
  <span />,
]
`;

exports[`Storyshots Domain Components/Card Long 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="article-card css-1y9794"
  >
    <div
      className="css-ojlcd6"
    >
      <img
        alt="thumbnail"
        className="chakra-image css-3j5kgf"
        height={70}
        loading="lazy"
        src="https://placehold.jp/150x150.png"
        width={120}
      />
      <div
        className="css-xg5s6b"
      >
        <h2
          className="css-1i8ukke"
        >
          吾輩は猫である。名前はまだ無い。どこで生れたかとんと見当がつかぬ
        </h2>
        <h3
          className="css-15qp5m4"
        >
          吾輩は猫である。名前はまだ無い。どこで生れたかとんと見当がつかぬ。何でも薄暗いじめじめした所でニャーニャー泣いていた事だけは記憶している。吾輩はここで始めて人間というものを見た。しかもあとで聞くとそれ...
        </h3>
        <time
          className="css-o30iye"
          dateTime="2000-11-22T00:00:00.000Z"
        >
          2000.11.22
        </time>
      </div>
    </div>
    <div
      className="css-fozpxd"
    >
      <div
        className="css-1eskh14"
      >
        <img
          alt="thumbnail"
          className="chakra-image css-i96gla"
          height={70}
          loading="lazy"
          src="https://placehold.jp/150x150.png"
          width={120}
        />
        <h2
          className="css-j0vfib"
        >
          吾輩は猫である。名前はまだ無い。どこで生れたかとんと見当がつかぬ
        </h2>
      </div>
      <h3
        className="css-xf98z4"
      >
        吾輩は猫である。名前はまだ無い。どこで生れたかとんと見当がつかぬ。何でも薄暗いじめじめした所でニャーニャー泣いていた事だけは記憶している。吾輩はここで始めて人間というものを見た。しかもあとで聞くとそれ...
      </h3>
      <time
        className="css-o30iye"
        dateTime="2000-11-22T00:00:00.000Z"
      >
        2000.11.22
      </time>
    </div>
  </div>,
  <span />,
]
`;

exports[`Storyshots Domain Components/Card No Thumbnail 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="article-card css-1y9794"
  >
    <div
      className="css-ojlcd6"
    >
      <div
        className="css-xg5s6b"
      >
        <h2
          className="css-1i8ukke"
        >
          吾輩は猫である
        </h2>
        <h3
          className="css-15qp5m4"
        >
          吾輩は猫である。名前はまだ無い。どこで生れたかとんと見当がつかぬ。何でも薄暗いじめじめした所でニャーニャー泣いていた事だけは記憶している。吾輩はここで始めて人間というものを見た。しかもあとで聞くとそれ...
        </h3>
        <time
          className="css-o30iye"
          dateTime="2000-11-22T00:00:00.000Z"
        >
          2000.11.22
        </time>
      </div>
    </div>
    <div
      className="css-fozpxd"
    >
      <div
        className="css-1eskh14"
      >
        <h2
          className="css-j0vfib"
        >
          吾輩は猫である
        </h2>
      </div>
      <h3
        className="css-xf98z4"
      >
        吾輩は猫である。名前はまだ無い。どこで生れたかとんと見当がつかぬ。何でも薄暗いじめじめした所でニャーニャー泣いていた事だけは記憶している。吾輩はここで始めて人間というものを見た。しかもあとで聞くとそれ...
      </h3>
      <time
        className="css-o30iye"
        dateTime="2000-11-22T00:00:00.000Z"
      >
        2000.11.22
      </time>
    </div>
  </div>,
  <span />,
]
`;

exports[`Storyshots Domain Components/Card Short 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="article-card css-1y9794"
  >
    <div
      className="css-ojlcd6"
    >
      <img
        alt="thumbnail"
        className="chakra-image css-3j5kgf"
        height={70}
        loading="lazy"
        src="https://placehold.jp/150x150.png"
        width={120}
      />
      <div
        className="css-xg5s6b"
      >
        <h2
          className="css-1i8ukke"
        >
          吾輩は猫である
        </h2>
        <h3
          className="css-15qp5m4"
        >
          吾輩は猫である。
        </h3>
        <time
          className="css-o30iye"
          dateTime="2000-11-22T00:00:00.000Z"
        >
          2000.11.22
        </time>
      </div>
    </div>
    <div
      className="css-fozpxd"
    >
      <div
        className="css-1eskh14"
      >
        <img
          alt="thumbnail"
          className="chakra-image css-i96gla"
          height={70}
          loading="lazy"
          src="https://placehold.jp/150x150.png"
          width={120}
        />
        <h2
          className="css-j0vfib"
        >
          吾輩は猫である
        </h2>
      </div>
      <h3
        className="css-xf98z4"
      >
        吾輩は猫である。
      </h3>
      <time
        className="css-o30iye"
        dateTime="2000-11-22T00:00:00.000Z"
      >
        2000.11.22
      </time>
    </div>
  </div>,
  <span />,
]
`;

exports[`Storyshots Domain Components/Pagination Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <ul
    className="pagination"
  >
    <li
      className="pagination__previous"
    >
      <a
        aria-disabled="false"
        aria-label="Previous page"
        onClick={[Function]}
        onKeyPress={[Function]}
        rel="prev"
        role="button"
        tabIndex="0"
      >
        &lt;
      </a>
    </li>
    <li>
      <a
        aria-current={null}
        aria-label="Page 1"
        onClick={[Function]}
        onKeyPress={[Function]}
        role="button"
        tabIndex="0"
      >
        1
      </a>
    </li>
    <li
      className="break"
    >
      <a
        onClick={[Function]}
        onKeyPress={[Function]}
        role="button"
        tabIndex="0"
      >
        ...
      </a>
    </li>
    <li>
      <a
        aria-current={null}
        aria-label="Page 3"
        onClick={[Function]}
        onKeyPress={[Function]}
        role="button"
        tabIndex="0"
      >
        3
      </a>
    </li>
    <li
      className="active"
    >
      <a
        aria-current="page"
        aria-label="Page 4 is your current page"
        onClick={[Function]}
        onKeyPress={[Function]}
        role="button"
        tabIndex="0"
      >
        4
      </a>
    </li>
    <li>
      <a
        aria-current={null}
        aria-label="Page 5"
        onClick={[Function]}
        onKeyPress={[Function]}
        role="button"
        tabIndex="0"
      >
        5
      </a>
    </li>
    <li
      className="break"
    >
      <a
        onClick={[Function]}
        onKeyPress={[Function]}
        role="button"
        tabIndex="0"
      >
        ...
      </a>
    </li>
    <li>
      <a
        aria-current={null}
        aria-label="Page 10"
        onClick={[Function]}
        onKeyPress={[Function]}
        role="button"
        tabIndex="0"
      >
        10
      </a>
    </li>
    <li
      className="pagination__next"
    >
      <a
        aria-disabled="false"
        aria-label="Next page"
        onClick={[Function]}
        onKeyPress={[Function]}
        rel="next"
        role="button"
        tabIndex="0"
      >
        &gt;
      </a>
    </li>
  </ul>,
  <span />,
]
`;

exports[`Storyshots Layout Components/Layout Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="css-0"
  >
    [[head]]
    [[header]]
    <main>
      <div
        className="css-jlhdae"
      >
        Hello World!
      </div>
    </main>
    [[footer]]
  </div>,
  <span />,
]
`;

exports[`Storyshots Library Components/BlogCard Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <html
    lang="ja"
  >
    <head>
      <meta
        charSet="utf-8"
      />
      <title>
        blog card
      </title>
      <style
        dangerouslySetInnerHTML={
          Object {
            "__html": "
.blog-card {
    position: relative;
}

.blog-card>a {
    display: -webkit-flex;
    display: -moz-box;
    display: flex;
    font-size: 13px;
    line-height: 1.45em;
    -webkit-transition: height .3s ease;
    transition: height .3s ease;
    border-radius: 3px;
    background: #fff;
    overflow: hidden;
    color: #1c1c1c;
    text-decoration: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none
}

.blog-card>a .blog-card__image {
    -webkit-flex-shrink: 0;
    flex-shrink: 0;
    width: 40%;
    height: 0;
    padding-bottom: 21%;
    -webkit-align-self: center;
    align-self: center;
    -webkit-transition: -webkit-transform .5s ease;
    transition: -webkit-transform .5s ease;
    transition: transform .5s ease;
    transition: transform .5s ease,-webkit-transform .5s ease;
    background-size: contain;
    background-repeat: no-repeat;
    background-position-x: center;
    background-position-y: center;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden
}

.blog-card>a .blog-card__details {
    display: -webkit-flex;
    display: -moz-box;
    display: flex;
    z-index: 0;
    -webkit-flex-direction: column;
    -moz-box-orient: vertical;
    -moz-box-direction: normal;
    flex-direction: column;
    -webkit-flex-grow: 1;
    -moz-box-flex: 1;
    flex-grow: 1;
    padding: 10px 16px;
    background: #fff
}

.blog-card>a .blog-card__details>div {
    margin: 0 0 4px
}

.blog-card>a .blog-card__details .blog-card__details__title {
    font-size: 1.2em;
    line-height: 1.4em;
    font-weight: 700
}

.blog-card>a .blog-card__details .blog-card__details__source {
    display: -webkit-flex;
    display: -moz-box;
    display: flex;
    -webkit-flex-grow: 1;
    -moz-box-flex: 1;
    flex-grow: 1;
    -webkit-align-items: flex-end;
    -moz-box-align: end;
    align-items: flex-end;
    -webkit-justify-content: flex-end;
    -moz-box-pack: end;
    justify-content: flex-end
}

.blog-card>a .blog-card__details .blog-card__details__source .blog-card__details__source__favicon {
    width: 16px;
    height: 16px;
    background-size: cover;
    margin-right: 3px
}

.blog-card>a:visited {
    color: #1c1c1c
}

.blog-card>a:hover {
    color: #e53900
}

.blog-card>a:hover .blog-card__image {
    -webkit-transform: scale(1.05);
    transform: scale(1.05)
}

@media screen and (max-width: 680px) {
    .blog-card>a .blog-card__image {
        width:46%;
        padding-bottom: 24%
    }
}

@media screen and (max-width: 540px) {
    .blog-card>a {
        -webkit-flex-direction: column;
        -moz-box-orient: vertical;
        -moz-box-direction: normal;
        flex-direction: column;
        border: 1px solid #ccc
    }

    .blog-card>a .blog-card__image {
        width: 100%;
        padding-bottom: 53%
    }

    .blog-card>a .blog-card__details {
        border-top: 1px solid #ccc
    }
}
      ",
          }
        }
      />
    </head>
    <body
      style={
        Object {
          "margin": 0,
        }
      }
    >
      <div
        className="blog-card"
      >
        <a
          href="https://example.com"
          rel="noopener noreferrer"
          target="_blank"
        >
          <div
            className="blog-card__image"
            style={
              Object {
                "backgroundColor": "#ccc",
                "backgroundImage": "url(https://user-images.githubusercontent.com/39912269/134110725-899217f2-03bb-44b7-a3bd-910b5d19c1a9.png)",
              }
            }
          />
          <div
            className="blog-card__details"
          >
            <div
              className="blog-card__details__title"
            >
              吾輩は猫である
            </div>
            <div
              className="blog-card__details__description"
            >
              吾輩は猫である。名前はまだ無い。どこで生れたかとんと見当がつかぬ。何でも薄暗いじめじめした所でニャーニャー泣いていた事だけは記憶している。吾輩はここで始めて人間というものを見た。しかもあとで聞くとそれ...
            </div>
            <div
              className="blog-card__details__source"
            >
              <div
                className="blog-card__details__source__favicon"
                style={
                  Object {
                    "backgroundImage": "url(https://www.google.com/s2/favicons?domain=example.com)",
                  }
                }
              />
              <div
                className="blog-card__details__source__name"
              >
                example
              </div>
            </div>
          </div>
        </a>
      </div>
    </body>
  </html>,
  <span />,
]
`;

exports[`Storyshots Library Components/BlogCard Minimum 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <html
    lang="ja"
  >
    <head>
      <meta
        charSet="utf-8"
      />
      <title>
        blog card
      </title>
      <style
        dangerouslySetInnerHTML={
          Object {
            "__html": "
.blog-card {
    position: relative;
}

.blog-card>a {
    display: -webkit-flex;
    display: -moz-box;
    display: flex;
    font-size: 13px;
    line-height: 1.45em;
    -webkit-transition: height .3s ease;
    transition: height .3s ease;
    border-radius: 3px;
    background: #fff;
    overflow: hidden;
    color: #1c1c1c;
    text-decoration: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none
}

.blog-card>a .blog-card__image {
    -webkit-flex-shrink: 0;
    flex-shrink: 0;
    width: 40%;
    height: 0;
    padding-bottom: 21%;
    -webkit-align-self: center;
    align-self: center;
    -webkit-transition: -webkit-transform .5s ease;
    transition: -webkit-transform .5s ease;
    transition: transform .5s ease;
    transition: transform .5s ease,-webkit-transform .5s ease;
    background-size: contain;
    background-repeat: no-repeat;
    background-position-x: center;
    background-position-y: center;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden
}

.blog-card>a .blog-card__details {
    display: -webkit-flex;
    display: -moz-box;
    display: flex;
    z-index: 0;
    -webkit-flex-direction: column;
    -moz-box-orient: vertical;
    -moz-box-direction: normal;
    flex-direction: column;
    -webkit-flex-grow: 1;
    -moz-box-flex: 1;
    flex-grow: 1;
    padding: 10px 16px;
    background: #fff
}

.blog-card>a .blog-card__details>div {
    margin: 0 0 4px
}

.blog-card>a .blog-card__details .blog-card__details__title {
    font-size: 1.2em;
    line-height: 1.4em;
    font-weight: 700
}

.blog-card>a .blog-card__details .blog-card__details__source {
    display: -webkit-flex;
    display: -moz-box;
    display: flex;
    -webkit-flex-grow: 1;
    -moz-box-flex: 1;
    flex-grow: 1;
    -webkit-align-items: flex-end;
    -moz-box-align: end;
    align-items: flex-end;
    -webkit-justify-content: flex-end;
    -moz-box-pack: end;
    justify-content: flex-end
}

.blog-card>a .blog-card__details .blog-card__details__source .blog-card__details__source__favicon {
    width: 16px;
    height: 16px;
    background-size: cover;
    margin-right: 3px
}

.blog-card>a:visited {
    color: #1c1c1c
}

.blog-card>a:hover {
    color: #e53900
}

.blog-card>a:hover .blog-card__image {
    -webkit-transform: scale(1.05);
    transform: scale(1.05)
}

@media screen and (max-width: 680px) {
    .blog-card>a .blog-card__image {
        width:46%;
        padding-bottom: 24%
    }
}

@media screen and (max-width: 540px) {
    .blog-card>a {
        -webkit-flex-direction: column;
        -moz-box-orient: vertical;
        -moz-box-direction: normal;
        flex-direction: column;
        border: 1px solid #ccc
    }

    .blog-card>a .blog-card__image {
        width: 100%;
        padding-bottom: 53%
    }

    .blog-card>a .blog-card__details {
        border-top: 1px solid #ccc
    }
}
      ",
          }
        }
      />
    </head>
    <body
      style={
        Object {
          "margin": 0,
        }
      }
    >
      <div
        className="blog-card"
      >
        <a
          href="https://example.com"
          rel="noopener noreferrer"
          target="_blank"
        >
          <div
            className="blog-card__image"
            style={
              Object {
                "backgroundColor": "#ccc",
                "backgroundImage": "url(https://user-images.githubusercontent.com/39912269/134110725-899217f2-03bb-44b7-a3bd-910b5d19c1a9.png)",
              }
            }
          />
          <div
            className="blog-card__details"
          >
            <div
              className="blog-card__details__title"
            >
              https://example.com
            </div>
            <div
              className="blog-card__details__description"
            >
              
            </div>
            <div
              className="blog-card__details__source"
            >
              <div
                className="blog-card__details__source__favicon"
                style={
                  Object {
                    "backgroundImage": "url(https://www.google.com/s2/favicons?domain=example.com)",
                  }
                }
              />
              <div
                className="blog-card__details__source__name"
              >
                example.com
              </div>
            </div>
          </div>
        </a>
      </div>
    </body>
  </html>,
  <span />,
]
`;

exports[`Storyshots Library Components/CodePen Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="article"
  >
    <div
      className="embed-codepen"
      style={
        Object {
          "height": 0,
          "paddingBottom": "56.25%",
          "position": "relative",
          "width": "100%",
        }
      }
    >
      <iframe
        allowFullScreen={true}
        allowTransparency={true}
        frameBorder="no"
        loading="lazy"
        scrolling="no"
        src="https://codepen.io/technote-space/embed/NWgLZRY?embed-version=2"
        style={
          Object {
            "height": "100%",
            "left": 0,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      />
    </div>
  </div>,
  <span />,
]
`;

exports[`Storyshots Library Components/CodeSandbox Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="article"
  >
    <div
      className="embed-codesandbox"
      style={
        Object {
          "height": 0,
          "paddingBottom": "56.25%",
          "position": "relative",
          "width": "100%",
        }
      }
    >
      <iframe
        allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking"
        allowFullScreen={true}
        allowTransparency={true}
        frameBorder="no"
        loading="lazy"
        sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"
        scrolling="no"
        src="https://codesandbox.io/embed/keen-roman-kpz43?fontsize=14&hidenavigation=1&theme=dark"
        style={
          Object {
            "height": "100%",
            "left": 0,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      />
    </div>
  </div>,
  <span />,
]
`;

exports[`Storyshots Library Components/JsFiddle Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="article"
  >
    <div
      className="embed-jsfiddle"
      style={
        Object {
          "height": 0,
          "paddingBottom": "56.25%",
          "position": "relative",
          "width": "100%",
        }
      }
    >
      <iframe
        allowFullScreen={true}
        allowTransparency={true}
        frameBorder="no"
        loading="lazy"
        scrolling="no"
        src="https://jsfiddle.net/Technote/3upmsz2y/2/embedded/"
        style={
          Object {
            "height": "100%",
            "left": 0,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      />
    </div>
  </div>,
  <span />,
]
`;

exports[`Storyshots Library Components/StackBlitz Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="article"
  >
    <div
      className="embed-stackblitz"
      style={
        Object {
          "height": 0,
          "paddingBottom": "56.25%",
          "position": "relative",
          "width": "100%",
        }
      }
    >
      <iframe
        allowFullScreen={true}
        allowTransparency={true}
        frameBorder="no"
        loading="lazy"
        scrolling="no"
        src="https://stackblitz.com/edit/js-fkebjy?file=index.js&embed=1"
        style={
          Object {
            "height": "100%",
            "left": 0,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      />
    </div>
  </div>,
  <span />,
]
`;

exports[`Storyshots Library Components/Tweet Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="article"
  >
    <div
      className="embed-tweet"
    >
      <iframe
        allowFullScreen={true}
        allowTransparency={true}
        frameBorder="0"
        id="twitter-widget-849813577770778624"
        loading="lazy"
        scrolling="no"
        src="https://platform.twitter.com/embed/Tweet.html?embedId=twitter-widget-849813577770778624&frame=false&hideCard=false&hideThread=false&id=849813577770778624&theme=light&widgetsVersion=1890d59c%3A1627936082797&width=450px"
        style={
          Object {
            "display": "block",
            "flexGrow": 1,
            "height": 660,
            "maxHeight": "calc(100vw * 1.6)",
            "maxWidth": "100%",
            "position": "static",
            "visibility": "visible",
            "width": 450,
          }
        }
        title="Twitter Tweet"
      />
    </div>
  </div>,
  <span />,
]
`;

exports[`Storyshots Library Components/YouTube Default 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="article"
  >
    <div
      className="embed-youtube"
      style={
        Object {
          "height": 0,
          "paddingBottom": "56.25%",
          "position": "relative",
          "width": "100%",
        }
      }
    >
      <iframe
        allowFullScreen={true}
        loading="lazy"
        src="https://www.youtube.com/embed/dHXC_ahjtEE?loop=1&playlist=dHXC_ahjtEE"
        style={
          Object {
            "height": "100%",
            "left": 0,
            "position": "absolute",
            "top": 0,
            "width": "100%",
          }
        }
      />
    </div>
  </div>,
  <span />,
]
`;

exports[`Storyshots Library Components/YouTube Invalid Url 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('system')",
      }
    }
  />,
  <div
    className="article"
  />,
  <span />,
]
`;
